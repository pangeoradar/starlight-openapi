---
import * as Sampler from 'openapi-sampler'

import type { ExampleV3, ExamplesV3 } from '../../libs/example'
import type { SchemaObject as SchemaObjectType } from '../../libs/schemaObject'
import ContentPicker from '../ContentPicker.astro'

import Example from './Example.astro'

export interface Props {
  example: unknown | undefined
  examples: ExamplesV3 | undefined
  schema: SchemaObjectType | undefined
  generate?: boolean | undefined
}

const { example, examples, schema, generate } = Astro.props

const internalExample = generate ? example ?? Sampler.sample(schema ?? {}) : example
const internalExamples = generate ? getExamples(examples) : examples

function getExamples(examples?: ExamplesV3) {
  const defaultExample: ExampleV3 = {
    description: 'Default example',
    value: internalExample,
  }

  return { 'application/json': defaultExample, ...examples }
}
---

{
  internalExample || internalExamples ? (
    internalExamples ? (
      <>
        <h5>Examples</h5>
        <ContentPicker label="Select example" types={Object.keys(internalExamples)}>
          {Object.entries(internalExamples).map(([type, data], index) => (
            <div data-openapi-content-type={type} hidden={index > 0} role="tabpanel">
              <Example example={data} {type} />
            </div>
          ))}
        </ContentPicker>
      </>
    ) : (
      <>
        <h5>Example</h5>
        <Example raw={internalExample} />
      </>
    )
  ) : null
}

<style>
  h5 {
    margin-block: 0.8rem;
    margin-top: 1rem !important;
  }
</style>
